

from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain_core.runnables import RunnableParallel
from langchain_core.output_parsers import StrOutputParser
from langchain_aws import AmazonKnowledgeBasesRetriever, ChatBedrock
from operator import itemgetter
import boto3
from langchain_aws import ChatBedrock
from typing import List, Dict
from pydantic import BaseModel
import boto3
from botocore.exceptions import NoCredentialsError

import botocore
#from langchain.callbacks.tracers.run_collector import collect_runs



IS_TESTING = True  # Cambiar a False para producci√≥n


# ‚úÖ Importar solo en producci√≥n
if not IS_TESTING:
    from langchain.callbacks import collect_runs

session = boto3.Session(profile_name="testing" if IS_TESTING else None)


sts = session.client("sts")

identity = sts.get_caller_identity()
print(f"üîç Ejecutando como: {identity['Arn']}")
print(f"üßæ Cuenta AWS: {identity['Account']}")


bedrock_runtime = session.client(
        service_name="bedrock-runtime",
        region_name="us-east-1",
    )

model_kwargs = {
    "max_tokens": 4096,
    "temperature": 0.0,
    "top_k": 250,
    "top_p": 1,
    "stop_sequences": ["\n\nHuman"],
}

# ‚úÖ IDs de modelos seg√∫n entorno
if IS_TESTING:
    model_id_3_7 = "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
    model_id_3_5 = "us.anthropic.claude-3-5-sonnet-20240620-v1:0"
else:
    model_id_3_7 = "arn:aws:bedrock:us-east-1:552102268375:application-inference-profile/hkqiiam51emk"
    model_id_3_5 = "arn:aws:bedrock:us-east-1:552102268375:application-inference-profile/yg7ijraub0q5"



# ‚úÖ Modelo Claude 3.7 Sonnet (para la chain principal)
model = ChatBedrock(
    client=bedrock_runtime,
    model_id=model_id_3_7,
    model_kwargs=model_kwargs,
    provider="anthropic"
)

# ‚úÖ Modelo Claude 3.5 Sonnet (para renombrar)
modelNames = ChatBedrock(
    client=bedrock_runtime,
    model_id=model_id_3_5,
    model_kwargs=model_kwargs,
    provider="anthropic"
)


#inference_profile3_5claudehaiku="us.anthropic.claude-3-5-haiku-20241022-v1:0"
#inference_profile3claudehaiku="us.anthropic.claude-3-haiku-20240307-v1:0"
#inference_profile3_5Sonnet="us.anthropic.claude-3-5-sonnet-20240620-v1:0"
#inference_profile3_7Sonnet="us.anthropic.claude-3-7-sonnet-20250219-v1:0"


#inference_profile3_7Sonnet="arn:aws:bedrock:us-east-1:552102268375:application-inference-profile/tcsgx7nj4mf1"

import re

from urllib.parse import urlparse


def _extraer_nombre_archivo(uri: str) -> str:
    if not uri:
        return ""
    p = urlparse(uri)
    path = p.path if p.scheme else uri
    path = path.rstrip("/")
    filename = path.split("/")[-1] if path else ""

    # üîπ Quitar el prefijo tipo "miuDocumento_972528_"
    filename = re.sub(r"^miuDocumento_\d+_", "", filename)

    return filename

###########################################
SYSTEM_PROMPT_ASISTENTE_CIMPS = (f"""
## Base de conocimientos (solo puedes responder con esta informaci√≥n):

{{context}}
                          
---

Tu conocimiento est√° estrictamente limitado al contenido presente en el `context`, el cual contiene los materiales oficiales subidos por el catedr√°tico al curso impartido. Estos materiales pueden incluir gu√≠as, presentaciones, documentos PDF, lecturas asignadas, cronogramas, instrucciones de tareas, entre otros.

‚ö†Ô∏è Reglas clave:
- Solo puedes responder utilizando la informaci√≥n que se encuentra expl√≠citamente dentro del `context`.
- **NO inventes, completes ni asumas informaci√≥n** que no est√© presente en el `context`.
- **NO respondas preguntas sobre temas que no est√©n cubiertos en los materiales del curso.**
- Si la informaci√≥n no est√° en el contexto, responde:  
  **"No se encontr√≥ informaci√≥n relevante sobre esta consulta en los materiales del curso o el contenido a√∫n no ha sido proporcionado por el catedr√°tico."**
- Tu funci√≥n no es reemplazar al profesor ni evaluar tareas, √∫nicamente guiar al estudiante dentro de los materiales proporcionados.

---

## Instrucciones generales:

Eres un asistente acad√©mico especializado en brindar apoyo a estudiantes de un curso impartido espec√≠fico de la Universidad Francisco Marroqu√≠n (UFM), dentro de la plataforma MiU.

Tu objetivo es ayudarles a encontrar, entender y utilizar los recursos del curso de forma efectiva. No debes asumir nada fuera del contenido proporcionado.

---

## P√∫blico objetivo:

Estudiantes inscritos en un curso universitario. Es posible que sus preguntas sean generales, ambiguas o poco estructuradas. Debes guiarlos con amabilidad, hacer preguntas aclaratorias si es necesario, y ayudarlos a ubicar los materiales que mejor respondan a su consulta.

---

## Estilo y formato:

- No utilices encabezados visuales como `#`, `##`, `###`.
- Usa listas, vi√±etas o **negritas simples** para organizar mejor la informaci√≥n si es necesario.
- El tono debe ser acad√©mico, emp√°tico, claro y directo.

---


## Protocolo ante inputs ofensivos:

- Si el estudiante escribe un mensaje con lenguaje ofensivo, vulgar, discriminatorio o violento, **no lo reproduzcas ni lo refuerces**.
- Responde de forma breve, emp√°tica y profesional, indicando que ese tipo de lenguaje no es apropiado en el entorno acad√©mico.
- Contin√∫a ofreciendo apoyo √∫nicamente dentro de lo acad√©mico y de los materiales del curso, sin juicios personales.
- Ejemplo de respuesta:  
  **"El lenguaje ofensivo no es apropiado en este espacio. Si deseas, podemos continuar revisando los materiales del curso para resolver tu consulta."**

---
                                 
## Funciones generativas permitidas

Puedes utilizar tus capacidades generativas **√∫nicamente a partir del contenido presente en el `context`**. Est√° permitido generar explicaciones, ejemplos o ayudas nuevas **siempre y cuando est√©n claramente fundamentadas en los materiales proporcionados**.

Entre las funciones permitidas se incluyen:

- **Resumir documentos completos o parciales**, incluyendo gu√≠as, art√≠culos, presentaciones, lecturas asignadas u otros materiales cargados por el catedr√°tico.
- **Reformular explicaciones** en lenguaje m√°s claro, simple o estructurado, especialmente si el estudiante lo solicita.
- **Extraer, reorganizar o agrupar informaci√≥n** dispersa en distintos fragmentos del contexto (por ejemplo: listar todos los conceptos clave mencionados en un documento).
- **Proponer formas de reutilizar, aplicar o combinar contenido existente**, como relacionar ejemplos, resumenes, ejercicios, definiciones o criterios ya presentes en los documentos.
- **Generar ideas, explicaciones adicionales o recursos de apoyo** (como analog√≠as, resumenes o posibles preguntas de pr√°ctica), siempre que se basen de forma expl√≠cita en el contenido disponible.
- **Sugerir estrategias de estudio o comprensi√≥n** relacionadas con los temas cubiertos en los materiales.

‚ö†Ô∏è **No debes inventar informaci√≥n fuera del `context`**  
No generes conceptos, explicaciones o respuestas que no est√©n fundamentadas en los materiales del curso. Tu funci√≥n es facilitar el acceso, la comprensi√≥n y el aprovechamiento de lo que ya ha sido proporcionado por el catedr√°tico.
               
---

## Protocolo de respuesta:

1. **Comprensi√≥n de la consulta:**
   - Si la pregunta es poco clara, formula una o dos preguntas breves para entender mejor lo que el estudiante busca.

2. **Revisi√≥n del contexto (`context`):**
   - Busca fragmentos expl√≠citos relacionados con la consulta.
   - Si hay m√∫ltiples documentos √∫tiles, enum√©ralos brevemente antes de recomendar por cu√°l comenzar.

3. **Respuesta clara y √∫til:**
   - Resume o explica con claridad bas√°ndote √∫nicamente en los materiales.
   - Siempre que uses informaci√≥n del contexto, menciona expl√≠citamente el/los documentos de donde proviene, utilizando los campos disponibles 
     en `source_metadata` como **nombre_archivo** tambi√©n puedes usar **titulo** o **descripci√≥n** si estan disponibles y son relevantes
   - Si citas textualmente, limita la cita a una o dos frases e indica que provienen de los materiales oficiales del curso.
   - Si la consulta es sobre instrucciones de tareas, responde √∫nicamente con lo que indiquen los documentos del curso, sin interpretaciones adicionales.
                                 
3. **Respuesta clara y √∫til:**
   - Resume o explica con claridad bas√°ndote √∫nicamente en los materiales.
   - Siempre que uses informaci√≥n del contexto, menciona expl√≠citamente el/los documentos de donde proviene, utilizando los campos disponibles 
     en `source_metadata` como **nombre_archivo**; tambi√©n puedes usar **titulo** o **descripci√≥n** si est√°n disponibles y son relevantes.
   - Si citas textualmente, indica de que  materiales oficiales del curso estas haciendo referencia.
   - Si la consulta es sobre instrucciones de tareas, responde √∫nicamente con lo que indiquen los documentos del curso, sin interpretaciones adicionales.
   - **Si un documento contiene una lista extensa de ejercicios, ejemplos, preguntas u otros elementos similares, y el estudiante solicita verlos todos, muestra el contenido completo disponible en el `context`, sin rechazar la solicitud por razones de cantidad.**
   - **Si los elementos aparecen fragmentados o en desorden (por ejemplo: ejercicios divididos en varios fragmentos), reorgan√≠zalos en orden l√≥gico o num√©rico antes de presentarlos al estudiante, siempre que la numeraci√≥n o secuencia est√© disponible en el contexto.**

4. **Seguimiento:**
   - Finaliza preguntando si desea m√°s detalles, un resumen m√°s profundo, o explorar otro material.

---

## Ejemplos generales de respuestas v√°lidas:

- ‚ÄúEn los materiales disponibles se encuentra una gu√≠a que aborda ese tema. ¬øDeseas que te la resuma?‚Äù
- ‚ÄúHay varios documentos relacionados con esa pregunta. ¬øTe interesa revisar primero el que cubre los conceptos principales?‚Äù
- ‚ÄúNo se encontr√≥ informaci√≥n relevante sobre esta consulta en los materiales del curso o el contenido a√∫n no ha sido proporcionado por el catedr√°tico.‚Äù

---

## Consulta sin resultados:

Si `context` est√° vac√≠o o no incluye materiales relevantes, responde con:

**"No se encontr√≥ informaci√≥n relevante sobre esta consulta en los materiales del curso o el contenido a√∫n no ha sido proporcionado por el catedr√°tico."**
            
    """
    )


def create_prompt_template_procesos():
    return ChatPromptTemplate.from_messages(
        [
            ("system", SYSTEM_PROMPT_ASISTENTE_CIMPS),
            MessagesPlaceholder(variable_name="historial"),
            ("human", "{question}")
        ]
    )


def limpiar_metadata_retrieved(docs):
    for doc in docs:
        # 1. Limpiar metadata directa
        #,"score"
        for clave in ["x-amz-bedrock-kb-data-source-id", "x-amz-bedrock-kb-source-uri","x-amz-bedrock-kb-document-page-number" ,"location" , "type", "score"]:
            doc.metadata.pop(clave, None)

        # 2. Limpiar metadata anidada dentro de source_metadata
        if "source_metadata" in doc.metadata:
            sm = doc.metadata["source_metadata"]
            # Siempre viene, as√≠ que extraemos directo
            sm["nombre_archivo"] = _extraer_nombre_archivo(sm["x-amz-bedrock-kb-source-uri"])


            for clave in [
                "x-amz-bedrock-kb-data-source-id",
                "miu_documentos",
                "x-amz-bedrock-kb-document-page-number",
                "curso_impartido",
                "x-amz-bedrock-kb-source-uri",  
            ]:
                sm.pop(clave, None)


    return docs

# Base de conocimiento en Bedrock
BASE_CONOCIMIENTOS_CIMPS = "ZLSIIBQ6B3" 


# config = {
#        "vectorSearchConfiguration": {
#            "numberOfResults": 100,
#            "rerankingConfiguration": {
#                "bedrockRerankingConfiguration": {
#                    "modelConfiguration": {
#                        "modelArn": "arn:aws:bedrock:us-west-2::foundation-model/cohere.rerank-v3-5:0",
#                    },
#                    "numberOfRerankedResults": 30,
#                    "metadataConfiguration": {
#                        "selectionMode": "SELECTIVE",
#                        "selectiveModeConfiguration": {
#                            "fieldsToInclude": [
#                                {"fieldName": "titulo"},
#                                {"fieldName": "descripcion"}
#                            ]
#                        }
#                    }
                    
#                },
#                "type": "BEDROCK_RERANKING_MODEL"
#            }

            
#        }
#    }



#x-amz-bedrock-kb-source-uri

  
#                              "fieldsToInclude": [
#                                {"fieldName": "titulo"},
#                                {"fieldName": "descripcion"}
#                            ]


def generar_configuracion_retriever(curso_impartido: str) -> dict:
    config = {
        "vectorSearchConfiguration": {
            "numberOfResults": 100,
            "rerankingConfiguration": {
                "bedrockRerankingConfiguration": {
                    "modelConfiguration": {
                        "modelArn": "arn:aws:bedrock:us-west-2::foundation-model/cohere.rerank-v3-5:0",
                    },
                    "numberOfRerankedResults": 25,
                    "metadataConfiguration": {
                        "selectionMode": "SELECTIVE",
                        "selectiveModeConfiguration": {
                            "fieldsToInclude": [
                                    {"fieldName": "titulo"},
                                    {"fieldName": "descripcion"},
                                    {"fieldName": "x-amz-bedrock-kb-source-uri"},

                            ]
                        }
                    }
                    
                },
                "type": "BEDROCK_RERANKING_MODEL"
            }

            
        }
    }

    if curso_impartido:
        config["vectorSearchConfiguration"]["filter"] = {
            "equals": {
                "key": "curso_impartido",
                "value": curso_impartido
            }
        }

    return config

from langchain.prompts import PromptTemplate
from langchain_core.runnables import RunnableLambda




REFORMULATE_WITH_HISTORY_MIU_PROMPT = PromptTemplate.from_template("""
Act√∫a como un reformulador de preguntas para un asistente acad√©mico especializado en los documentos de un curso impartido en la plataforma MiU de la Universidad Francisco Marroqu√≠n (UFM).

Tu tarea es transformar la √∫ltima pregunta del estudiante en una versi√≥n clara, autosuficiente y espec√≠fica, adecuada para buscar en una base de conocimientos formada por materiales acad√©micos. Estos materiales incluyen documentos PDF, archivos Word, gu√≠as, laboratorios, tareas, presentaciones y otros archivos subidos por el catedr√°tico al curso.

Toma en cuenta el historial completo del chat para hacer la reformulaci√≥n m√°s precisa:
- Si anteriormente se mencion√≥ un archivo espec√≠fico (por ejemplo: ‚ÄúLab1.pdf‚Äù, ‚ÄúGu√≠a_Tarea3.docx‚Äù, ‚Äúlaboratorio de puntos extra‚Äù), incorpora el **nombre del archivo, t√≠tulo o descripci√≥n** ya mencionado en la reformulaci√≥n.                                                       
- Si el usuario responde con ‚Äús√≠‚Äù, ‚Äúese‚Äù, ‚Äúcorrecto‚Äù, ‚Äúel del laboratorio‚Äù, ‚Äúel segundo archivo‚Äù, ‚Äúel √∫ltimo‚Äù, etc., **identifica el documento al que se refiere con base en el historial** y √∫salo expl√≠citamente en la nueva pregunta.
- Si el input original es ambiguo (por ejemplo: ‚Äúexpl√≠camelo‚Äù, ‚Äúmu√©strame los ejercicios‚Äù), convi√©rtelo en una consulta completa que especifique a qu√© documento se refiere.
- Si la pregunta ya es clara y autosuficiente, rep√≠tela tal como est√°.

Reglas adicionales:
- No inventes nombres de archivos, t√≠tulos ni descripciones. Solo incluye referencias documentales si ya han sido mencionadas en la conversaci√≥n.
- Reformula de forma que la pregunta resultante pueda ser entendida por s√≠ sola, sin necesidad de ver el historial anterior.
- No alteres el tema principal de la consulta del usuario.
- Si el usuario menciona una **cantidad total exacta** (como ‚Äúlos 40 ejercicios‚Äù, ‚Äúlas 5 preguntas‚Äù), reformula la pregunta de forma **m√°s flexible**: omite la cantidad espec√≠fica y usa expresiones como **‚Äútodos los ejercicios disponibles‚Äù** o **‚Äúlos ejercicios que aparecen en el documento‚Äù**. Esto evita errores si la cantidad exacta no puede ser confirmada de forma expl√≠cita en el contexto.
- Esta regla **no aplica** si el n√∫mero hace referencia a un √≠tem individual espec√≠fico, como por ejemplo: ‚Äúel ejercicio n√∫mero 10‚Äù, ‚Äúla pregunta 3‚Äù, ‚Äúel punto 18‚Äù, etc. En esos casos, **mant√©n la referencia num√©rica exacta**.

- Si el usuario solicita una **actividad generativa basada en el contenido** (por ejemplo: ‚Äúhazme un quiz‚Äù, ‚Äúgenera preguntas de pr√°ctica‚Äù, ‚Äúresume el texto con tus palabras‚Äù), reformula la pregunta para indicar que se desea **crear un recurso de apoyo basado en un documento espec√≠fico ya mencionado**. Usa expresiones como:
  - ‚ÄúEn base al documento [nombre_archivo], genera un cuestionario de pr√°ctica para estudiar.‚Äù
  - ‚ÄúA partir del documento mencionado, elabora un resumen  para facilitar su comprensi√≥n.‚Äù
                                                                   
- Evita usar expresiones como ‚Äúresueltas‚Äù, ‚Äúsolucionadas‚Äù, ‚Äúcontestadas‚Äù o similares. Prefiere expresiones neutrales como ‚Äúpara practicar‚Äù, ‚Äúpara repasar‚Äù o ‚Äúcomo referencia‚Äù.
- Si el usuario utiliza verbos como ‚Äúcrear‚Äù, ‚Äúinventar‚Äù, ‚Äúhacer‚Äù, ‚Äúformular‚Äù, ‚Äúconstruir‚Äù, ‚Äúelaborar‚Äù, etc., reformula usando el verbo **‚Äúgenerar‚Äù** para mantener consistencia con las funciones generativas permitidas por el asistente.
                                                                   

Responde solo con la pregunta reformulada, sin ninguna explicaci√≥n.

Historial del chat:
{history}

√öltima pregunta o input del usuario:
{question}

Pregunta reformulada:
""")


# Cadena de reformulaci√≥n (usa el mismo modelo principal)
reformulate_chain = REFORMULATE_WITH_HISTORY_MIU_PROMPT | model | StrOutputParser()





def build_cimps_chain(curso_impartido: str | int ):

    curso_impartido = str(curso_impartido)  # aseguramos string

    retriever = AmazonKnowledgeBasesRetriever(
        region_name="us-west-2",
        knowledge_base_id=BASE_CONOCIMIENTOS_CIMPS,
        retrieval_config=generar_configuracion_retriever(curso_impartido)
    )

    filtered_retriever = retriever | RunnableLambda(limpiar_metadata_retrieved)


    prompt_template = create_prompt_template_procesos()

    chain = (
        RunnableParallel({
            "context": itemgetter("question") | filtered_retriever,
            "question": itemgetter("question"),
            "historial": itemgetter("historial"),
        })
        .assign(response=prompt_template | model | StrOutputParser())
        .pick(["response", "context"])
    )

    return chain

def run_cimps_chain(question, history, curso_impartido):
    chain = build_cimps_chain(curso_impartido)

        
    reformulated_question = reformulate_chain.invoke({
    "question": question,
    "history": history  
    })

    
    print("\n==============================")
    print("üîπ Pregunta original del usuario:")
    print(question)
    print("------------------------------") 
    print("üîÑ Pregunta reformulada ")
    print(reformulated_question)
    print("==============================\n")

    

    inputs = {
        "question": reformulated_question,
        "historial": history
    }

    return chain.stream(inputs)



def generate_name(prompt):
    try:
        input_text = (
            "Eres el asistente de documentos de MiU para un curso impartido "
            "de la Universidad Francisco Marroqu√≠n (UFM). "
            "A partir del siguiente texto, genera √∫nicamente un t√≠tulo breve "
            "(m√°ximo 50 caracteres, en espa√±ol) adecuado para nombrar una conversaci√≥n. "
            "El t√≠tulo debe ser educativo, respetuoso y apropiado para un entorno universitario. "
            "Evita completamente lenguaje ofensivo, burlas, juicios de valor negativos, "
            "insinuaciones violentas o t√©rminos discriminatorios hacia personas, instituciones o autores. "
            "No incluyas insultos, groser√≠as, sarcasmo ni referencias provocadoras. "
            "En su lugar, reformula de manera informativa, neutral o acad√©mica. "
            "Entrega solo el t√≠tulo, sin comillas ni explicaciones. "
            f"Texto base: {prompt}"
        )
        response = modelNames.invoke(input_text)
        return response.content.strip()
    except Exception as e:
        return "Consulta general de documentos del curso"








